1.  C√°c lo·∫°i c√¢u l·ªánh sql ch√≠nh :
  - DML: Data manipulation Language: Ng√¥n ng·ªØ thao t√°c d·ªØ li·ªáu, D√πng ƒë·ªÉ thao t√°c v·ªõi d·ªØ li·ªáu b√™n trong b·∫£ng g·ªìm (Select, Insert, Update v√† Delete)
  - DDL: Data definition Language: Ng√¥n ng·ªØ ƒë·ªãnh nghƒ©a d·ªØ li·ªáu. D√πng ƒë·ªÉ ƒë·ªãnh nghƒ©a ho·∫∑c thay ƒë·ªïi c·∫•u tr√∫c c·ªßa c∆° s·ªü d·ªØ li·ªáu, nh∆∞ c√°c b·∫£ng, ch·ªâ m·ª•c v√† r√†ng bu·ªôc. C√°c c√¢u l·ªánh (Create, ALTER, DROP).
  - DCL (Data Control Language): Ng√¥n ng·ªØ ki·ªÉm so√°t d·ªØ li·ªáu. D√πng ƒë·ªÉ qu·∫£n l√Ω quy·ªÅn truy c·∫≠p v√† b·∫£o m·∫≠t c∆° s·ªü d·ªØ li·ªáu. C√°c c√¢u l·ªánh ph·ªï bi·∫øn (GRANT: C·∫•p quy·ªÅn cho ng∆∞·ªùi d√πng V√† REVOKE: Thu h·ªìi quy·ªÅn ƒë√£ c·∫•p)
  - TCL: Transaction Control Language): Ng√¥n ng·ªØ ki·ªÉm so√°t giao d·ªãch. D√πng ƒë·ªÉ qu·∫£n l√Ω c√°c giao d·ªãch trong c∆° s·ªü d·ªØ li·ªáu ƒë·ªÉ ƒë·∫£m b·∫£o t√≠nh to√†n v·∫πn c·ªßa d·ªØ li·ªáu. C√°c c√¢u l·ªánh (COMMIT: L∆∞u c√°c thay ƒë·ªïi c·ªßa giao d·ªãch v√†o c∆° s·ªü d·ªØ li·ªáu. v√† ROLLBACK: H·ªßy b·ªè c√°c thay ƒë·ªïi c·ªßa giao d·ªãc)
2. TRUNCATE d√πng ƒë·ªÉ to√†n b·ªô d·ªØ li·ªáu c·ªßa b·∫£ng.
3 COUNT(*) v√† COUNT(column_name):
 - Count(*): th·ª±c hi·ªán ƒë·∫øm s·ªë l∆∞·ª£ng h√†ng c√≥ bao nhi√™u trong b·∫£ng k·ªÉ c·∫£ c√°c h√†ng c√≥ gi√° tr·ªã null
 - Count(column_name): ƒë·∫øm s·ªë l∆∞·ª£ng h√†ng c√≥ bao nhi√™u c√≥ trong b·∫£ng nh∆∞ng n√≥ kh√¥ng th·ª±c hi·ªán ƒë·∫øm c√°c h√†ng c√≥ gi√° tr·ªã null.
4. HAVING kh√°c WHERE nh∆∞ th·∫ø n√†o: 
 - WHERE th∆∞·ªùng ƒë∆∞·ª£c d√πng ƒë·ªÉ l·ªçc c√°c gi√° tr·ªã ri√™ng l·∫ª tr∆∞·ªõc khi ch√∫ng ƒë∆∞·ª£c t·∫°o b·ªüi GROUP BY. H·∫°n ch·∫ø s·ª≠ d·ª•ng c√°c h√†m t·ªïng h·ª£p b√™n trong nh∆∞(sum, count, avg,...)  [SLECT..FROM..WHERE..GROUPBY]
 - Having th∆∞·ªùng ƒë∆∞·ª£c d√πng ƒë·ªÉ l·ªçc nh√≥m d·ªØ li·ªáu sau khi th·ª±c hi·ªán Group by. N√≥ b·∫Øt bu·ªôc s·ª≠ d·ª•ng sau group by v√† th∆∞·ªùng ƒëi c√πng v·ªõi c√°c h√†m t·ªïng h·ª£p trong ƒëi·ªÅu ki·ªán c·ªßa n√≥.[SLECT..FROM..GROUPBY..HAVING]
5.JOIN IN SQL  (SELECT Students.Name, Courses.CourseName  FROM Students ...JOIN Courses ON Students.StudentID = Courses.StudentID;)
  - INNER JOIN (Ph√©p giao) : th·ª±c hi·ªán truy v·∫•n gi·ªØa hai b·∫£ng, tr·∫£ v·ªÅ c√°c h√†ng c√≥ gi√° tr·ªã v√† kh·ªõp nhau gi·ªØa hai b·∫£ng. N√≥ s·∫Ω lo·∫°i b·ªè nh·ªØng h√†ng kh√¥ng c√≥ d·ªØ li·ªáu,
  - LEFT JOIN (Ph√©p tr√°i)  : Th·ª±c hi·ªán truy v·∫•n gi·ªØa hai b·∫£ng, tr·∫£ v·ªÅ c√°c gi√° tr·ªã t·∫•t c·∫£ c√°c h√†ng b√™n tr√°i v√† c√°c gi√° tr·ªã kh·ªõp ·ªü b√™n ph·∫£i n·∫øu kh√¥ng kh·ªõp th√¨ s·∫Ω tr·∫£ v·ªÅ gi√° tr·ªã null
  - RIGHT JOIN (Ph√©p ph·∫£i): Th·ª±c hi·ªán truy v·∫•n gi·ªØa hai b·∫£ng, tr·∫£ v·ªÅ c√°c gi√° tr·ªã t·∫•t c·∫£ c√°c h√†ng b√™n ph·∫£i v√† c√°c gi√° tr·ªã kh·ªõp b√™n tr√°i n·∫øu kh√¥ng kh·ªõp th√¨ s·∫Ω tr·∫£ v·ªÅ gi√° tr·ªã null
  - FULL JOIN (Ph√©p h·ª£p): Th·ª±c hi·ªán truy v·∫•n gi·ªØa hai b·∫£ng, tr·∫£ v·ªÅ c√°c gi√° tr·ªã t·∫•t c·∫£ c√°c h√†ng ·ªü hai b·∫£ng n·∫øu kh√¥ng c√≥ gi√° tr·ªã th√¨ n√≥ t·ª± ƒë·ªông ƒëi·ªÅn gi√° tr·ªã null.
6. UNION V√Ä UNION ALL  [SELECT... FROM ..... UNION/UNION ALL SELECT...FROM...]
 - UNION: S·∫Ω t·∫≠p h·ª£p c√°c t·ªáp k·∫øt qu·∫£ v√† lo·∫°i b·ªè c√°c h√†ng tr√πng l·∫∑p, n√≥ ch·ªâ th·ª±c hi·ªán 1 gi√° tr·ªã duy nh·∫•t, ch·∫≠m h∆°n Union all.
 - UNION ALL: S·∫Ω t·∫≠p h·ª£p c√°c t·ªáp k·∫øt qu·∫£ l·∫°i v·ªõi nhau v√† ƒë·ªìng th·ªùi gi·ªØ l·∫°i t·∫•t c·∫£ c√°c h√†ng, bao g·ªìm c√°c h√†ng tr√πng l·∫∑p. (N√≥ nhanh h∆°n union v√¨ kh√¥ng c·∫ßn l·ªçc ch·ªâ c·∫ßn l·∫•y ra)
7. UNIQUE KEY: L√Ä kh√≥a duy nh·∫•t ƒë·ªÉ ƒë·∫£m b√°o t√≠nh duy nh·∫•t trong b·∫£ng n√≥ kh√°c v·ªõi PRIMARY KEY l√† n√≥ c√≥ th·ªÉ null, d√πng ƒë·ªÉ ƒë·∫£m b·∫£o t√≠nh duy nh·∫•t c·ªßa d·ªØ li·ªáu tr√™n m·ªôt ho·∫∑c nhi·ªÅu c·ªôt, m·ªói b·∫£ng c√≥ nhi·ªÅu kh√≥a duy nh·∫•t(v√≠ d·ª• nh∆∞ sƒët, d·ªãa ch·ªâ, email , th√¨ kh√¥ng ƒë∆∞·ª£c tr√πng......)
8 Ph√¢n bi·ªát Stored Procedure v√† Function trong SQL
Stored Procedure v√† Function ƒë·ªÅu l√† c√°c ch∆∞∆°ng tr√¨nh con ƒë∆∞·ª£c l∆∞u tr·ªØ trong c∆° s·ªü d·ªØ li·ªáu, nh∆∞ng ch√∫ng c√≥ nh·ªØng kh√°c bi·ªát quan tr·ªçng v·ªÅ m·ª•c ƒë√≠ch v√† c√°ch s·ª≠ d·ª•ng:
    ƒê·∫∑c ƒëi·ªÉm	                                          Stored Procedure	                                                                                      Function
    Gi√° tr·ªã tr·∫£ v·ªÅ	                        C√≥ th·ªÉ tr·∫£ v·ªÅ kh√¥ng ho·∫∑c nhi·ªÅu gi√° tr·ªã th√¥ng qua c√°c tham s·ªë OUT.	                                                B·∫Øt bu·ªôc ph·∫£i tr·∫£ v·ªÅ m·ªôt gi√° tr·ªã duy nh·∫•t (ƒë∆°n tr·ªã ho·∫∑c b·∫£ng).
    Kh·∫£ nƒÉng s·ª≠ d·ª•ng	                      C√≥ th·ªÉ g·ªçi ƒë·ªôc l·∫≠p b·∫±ng c√¢u l·ªánh EXEC ho·∫∑c CALL. Kh√¥ng th·ªÉ s·ª≠ d·ª•ng trong c√¢u l·ªánh SELECT.	                        C√≥ th·ªÉ ƒë∆∞·ª£c g·ªçi ƒë·ªôc l·∫≠p, nh∆∞ng th∆∞·ªùng ƒë∆∞·ª£c s·ª≠ d·ª•ng nh∆∞ m·ªôt ph·∫ßn c·ªßa c√¢u l·ªánh SQL kh√°c, v√≠ d·ª• nh∆∞ trong SELECT, WHERE, HAVING.
    DML	                                    C√≥ th·ªÉ th·ª±c hi·ªán c√°c thao t√°c DML nh∆∞ INSERT, UPDATE, DELETE.	                                                    Kh√¥ng th·ªÉ th·ª±c hi·ªán c√°c thao t√°c DML (ch·ªâ cho ph√©p trong m·ªôt s·ªë tr∆∞·ªùng h·ª£p ƒë·∫∑c bi·ªát).
    Giao d·ªãch	                              C√≥ th·ªÉ qu·∫£n l√Ω c√°c giao d·ªãch (s·ª≠ d·ª•ng COMMIT, ROLLBACK).	                                                        Kh√¥ng th·ªÉ qu·∫£n l√Ω giao d·ªãch.
    M·ª•c ƒë√≠ch	                              Th·ª±c hi·ªán m·ªôt chu·ªói c√°c h√†nh ƒë·ªông ho·∫∑c logic nghi·ªáp v·ª• ph·ª©c t·∫°p.	                                                 T√≠nh to√°n m·ªôt gi√° tr·ªã v√† tr·∫£ v·ªÅ n√≥.
8.Normalization (chu·∫©n h√≥a) trong c∆° s·ªü d·ªØ li·ªáu
1NF: Kh√¥ng l·∫∑p nh√≥m, d·ªØ li·ªáu nguy√™n t·ª≠ (m·ªói √¥ 1 gi√° tr·ªã).
2NF: Kh√¥ng ph·ª• thu·ªôc m·ªôt ph·∫ßn v√†o kh√≥a (t√°ch b·∫£ng ra).
3NF: Kh√¥ng ph·ª• thu·ªôc b·∫Øc c·∫ßu gi·ªØa c√°c c·ªôt kh√¥ng kh√≥a (chia th√™m b·∫£ng).
üëâ Sau chu·∫©n h√≥a, d·ªØ li·ªáu g·ªçn g√†ng, √≠t tr√πng l·∫∑p, d·ªÖ update, nh∆∞ng nh∆∞·ª£c ƒëi·ªÉm l√† JOIN nhi·ªÅu b·∫£ng ‚Üí truy v·∫•n ph·ª©c t·∫°p h∆°n.
