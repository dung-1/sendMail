Common Language Runtime (CLR) 
Design Pattern:
a. Dependency Injection (DI) :Gi√∫p qu·∫£n l√Ω c√°c dependency trong ·ª©ng d·ª•ng m·ªôt c√°ch d·ªÖ d√†ng. ASP.NET Core h·ªó tr·ª£ s·∫µn DI.
- V√≠ d·ª• th·ª±c t·∫ø: Ti√™m IProductRepository v√†o Controller.
b. Repository Pattern: T√°ch bi·ªát logic truy v·∫•n d·ªØ li·ªáu v·ªõi t·∫ßng business logic. D√πng trong ASP.NET Core v·ªõi Entity Framework ƒë·ªÉ qu·∫£n l√Ω d·ªØ li·ªáu t·ªët h∆°n.
- V√≠ d·ª• th·ª±c t·∫ø: Qu·∫£n l√Ω b·∫£ng Product trong database.
+ public class Product
+ public interface IProductRepositor
+ public class ProductRepository : IProductRepository
   private readonly ApplicationDbContext _context;

    public ProductRepository(ApplicationDbContext context) {
        _context = context;
    }
1.  Exception trong C#:  l√† m·ªôt c∆° ch·∫ø ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ x·ª≠ l√Ω c√°c l·ªói ho·∫∑c t√¨nh hu·ªëng b·∫•t th∆∞·ªùng x·∫£y ra trong qu√° tr√¨nh th·ª±c thi ch∆∞∆°ng tr√¨nh. Khi m·ªôt l·ªói x·∫£y ra, h·ªá th·ªëng s·∫Ω "n√©m" m·ªôt ƒë·ªëi t∆∞·ª£ng Exception (ngo·∫°i l·ªá) ƒë·ªÉ th√¥ng b√°o v·ªÅ l·ªói ƒë√≥
  - C·∫•u tr√∫c Exception trong C#: Exception Class: ƒê√¢y l√† l·ªõp c∆° s·ªü cho t·∫•t c·∫£ c√°c lo·∫°i ngo·∫°i l·ªá trong C#, ƒê·ªëi t∆∞·ª£ng Exception: M·ªôt ngo·∫°i l·ªá trong C# ƒë∆∞·ª£c bi·ªÉu th·ªã d∆∞·ªõi d·∫°ng m·ªôt ƒë·ªëi t∆∞·ª£ng c·ªßa l·ªõp Exception ho·∫∑c c√°c l·ªõp con c·ªßa n√≥ (v√≠ d·ª•: NullReferenceException, FileNotFoundException, v.v.)
    Thu·ªôc t√≠nh c·ªßa Exception
  - . Khi n√†o n√™n d√πng Exception: X·ª≠ l√Ω l·ªói ngo·∫°i l·ªá: Khi b·∫°n mu·ªën x·ª≠ l√Ω c√°c t√¨nh hu·ªëng b·∫•t th∆∞·ªùng m√† kh√¥ng l√†m gi√°n ƒëo·∫°n ch∆∞∆°ng tr√¨nh. V√≠ d·ª•, ƒë·ªçc file kh√¥ng t·ªìn t·∫°i, ho·∫∑c k·∫øt n·ªëi c∆° s·ªü d·ªØ li·ªáu th·∫•t b·∫°i.
Exception l√† c∆° ch·∫ø quan tr·ªçng gi√∫p x·ª≠ l√Ω l·ªói trong C#.
try-catch-finally gi√∫p b·∫Øt l·ªói v√† ƒë·∫£m b·∫£o ch∆∞∆°ng tr√¨nh kh√¥ng b·ªã d·ª´ng ƒë·ªôt ng·ªôt.
throw gi√∫p t·∫°o l·ªói ho·∫∑c n√©m l·ªói ƒë·ªÉ x·ª≠ l√Ω ·ªü c·∫•p cao h∆°n.
Lu√¥n x·ª≠ l√Ω l·ªói ƒë√∫ng c√°ch ƒë·ªÉ l√†m cho ch∆∞∆°ng tr√¨nh ho·∫°t ƒë·ªông ·ªïn ƒë·ªãnh h∆°n.
2 throw trong C#
Ch·ª©c nƒÉng c·ªßa throw
throw ƒë∆∞·ª£c d√πng ƒë·ªÉ n√©m m·ªôt Exception, t·ª©c l√† l√†m cho ch∆∞∆°ng tr√¨nh d·ª´ng l·∫°i v√† b√°o l·ªói.
C√≥ th·ªÉ d√πng throw ƒë·ªÉ t·∫°o l·ªói m·ªõi ho·∫∑c n√©m l·∫°i l·ªói ƒë√£ b·∫Øt.
2.Trong C# .NET, HasValue l√† m·ªôt thu·ªôc t√≠nh c·ªßa ki·ªÉu d·ªØ li·ªáu nullable value types (Nullable<T>). N√≥ ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ ki·ªÉm tra xem m·ªôt bi·∫øn nullable (int?, double?, bool?, v.v.) c√≥ ch·ª©a gi√° tr·ªã h·ª£p l·ªá hay kh√¥ng
  int? age = null;
if (age.HasValue)
{
    Console.WriteLine($"Tu·ªïi c·ªßa b·∫°n l√†: {age.Value}");
}
else
{
    Console.WriteLine("Ch∆∞a c√≥ th√¥ng tin v·ªÅ tu·ªïi.");
}
HasValue ch·ªâ ki·ªÉm tra xem bi·∫øn c√≥ gi√° tr·ªã hay kh√¥ng.
Value d√πng ƒë·ªÉ l·∫•y gi√° tr·ªã c·ªßa bi·∫øn. N·∫øu bi·∫øn l√† null, truy c·∫≠p Value s·∫Ω g√¢y l·ªói InvalidOperationException.
üìå K·∫øt lu·∫≠n
‚úÖ HasValue l√† m·ªôt thu·ªôc t√≠nh c·ªßa nullable types (int?, double?, DateTime?, ...).
‚úÖ Gi√∫p ki·ªÉm tra xem bi·∫øn nullable c√≥ gi√° tr·ªã hay kh√¥ng.
‚úÖ N√™n d√πng HasValue tr∆∞·ªõc khi truy c·∫≠p Value ƒë·ªÉ tr√°nh l·ªói.
‚úÖ H·ªØu √≠ch trong x·ª≠ l√Ω d·ªØ li·ªáu thi·∫øu (null) nh∆∞ ng√†y sinh, tu·ªïi, gi√° tr·ªã c·∫£m bi·∫øn, v.v.
·∫øu kh√¥ng mu·ªën d√πng HasValue, c√≥ th·ªÉ d√πng to√°n t·ª≠ ?? ƒë·ªÉ g√°n gi√° tr·ªã m·∫∑c ƒë·ªãnh
